<Application x:Class="App_Documentacion.App"

             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"

             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

             xmlns:String="clr-namespace:System;assembly=mscorlib"

             xmlns:Models="clr-namespace:MVVM.Modelos.Inicio;assembly=MVVM"

             xmlns:Converter="clr-namespace:MVVM.Convertidores;assembly=MVVM"

             xmlns:PagesCode="clr-namespace:App_Documentacion.Vistas.Codigo"

             StartupUri="Vistas/Home.xaml">

    <Application.Resources>



        <!--Contextos-->

        <Models:ModeloInicio x:Key="ContextInicio"/>



        <!--Convertidores-->

        <Converter:ConvertWindowToNormalVisibility x:Key="ConvertWindowNormalToVisibility"/>

        <Converter:ConvertWindowToMaximizeVisibility x:Key="ConvertWindowMaximizeToVisibility"/>



        <!--Imagenes-->

        <String:String x:Key="Cerrar">/App-Documentacion;component/Imagenes/cerrar.png</String:String>

        <String:String x:Key="Minimizar">/App-Documentacion;component/Imagenes/minimizar.png</String:String>

        <String:String x:Key="Restaurar">/App-Documentacion;component/Imagenes/restaurar.png</String:String>

        <String:String x:Key="Acoplar">/App-Documentacion;component/Imagenes/acoplar.png</String:String>

        <String:String x:Key="Code">/App-Documentacion;component/Imagenes/code.png</String:String>

        <String:String x:Key="Settings">/App-Documentacion;component/Imagenes/settings.png</String:String>

        <String:String x:Key="Ir">/App-Documentacion;component/Imagenes/Ir.png</String:String>

        <String:String x:Key="Add">/App-Documentacion;component/Imagenes/add.png</String:String>

        <String:String x:Key="Cancelar">/App-Documentacion;component/Imagenes/Cancelar.png</String:String>
        
        <!--Cadenas-->
        <String:String x:Key="AreaUsuaria">Área Usuaria</String:String>
        <String:String x:Key="AreaPrincipal">Área Principal</String:String>
        <String:String x:Key="ResponsablePrincipal">Responsable Principal</String:String>
        <String:String x:Key="Responsable">Responsable</String:String>
        <String:String x:Key="Responsables">Responsables</String:String>
        <String:String x:Key="Pruebas">Pruebas</String:String>
        <String:String x:Key="ElaboroPDP">Persona que elaboró PDP</String:String>
        <String:String x:Key="AplicoPDP">Persona que aplicó PDP</String:String>
        <String:String x:Key="EquipoSistemas">Equipo de Sistemas</String:String>
        <String:String x:Key="GerenteDesarrollo">Gerente de Desarrollo</String:String>
        <String:String x:Key="Lider">Líder de Proyecto</String:String>
        <String:String x:Key="Desarrolladores">Desarrolladores</String:String>
        <String:String x:Key="Calidad">Aseguramiento de Calidad</String:String>
        <String:String x:Key="AdministradorDB">Administrador Bases de Datos</String:String>
        <String:String x:Key="ProduccionSistemas">Producción Sistemas</String:String>
        <String:String x:Key="GerenteProduccion">Gerente de Producción</String:String>
        <String:String x:Key="GerenteInfraEstructura">Gerencia de Infraestructura y Comunicaciones</String:String>
        <String:String x:Key="SubDireccion">Subdirección de Desarrollo</String:String>
        
        <!--Estilo Controles-->

        <SolidColorBrush Color="AliceBlue" Opacity="0.4" x:Key="BordeOpaco"/>

        <SolidColorBrush Color="#FF145107" x:Key="VerdeBim"/>

        <SolidColorBrush Color="White" x:Key="ColorBlanco"/>





        <Style TargetType="Button" x:Key="ButtonEstadoVentanaRestaurar">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Grid Width="20" Height="20" Background="Transparent">

                            <Path Data="M18.281,4.77 L25.113001,4.77 25.113001,14.014 7.3319998,14.014 7.3319998,9.7440005 18.281,9.7440005 z M0.5,0.5 L18.281,0.5 18.281,4.77 7.3319998,4.77 7.3319998,9.7440005 0.5,9.7440005 z" HorizontalAlignment="Center" Height="10"  Stretch="Fill" VerticalAlignment="Center" Width="15" >

                                <Path.Stroke>

                                    <RadialGradientBrush>

                                        <GradientStop Color="#FFB0ADAD" Offset="0"/>

                                        <GradientStop Color="#FF4F4949" Offset="1"/>

                                    </RadialGradientBrush>

                                </Path.Stroke>

                            </Path>

                        </Grid>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="Opacity" Value="0.7"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="true">

                    <Setter Property="Opacity" Value="1"/>

                </Trigger>



                <Trigger Property="IsMouseOver" Value="false">

                    <Setter Property="Opacity" Value=".4"/>

                </Trigger>

            </Style.Triggers>

        </Style>



        <Style TargetType="Button" x:Key="ButtonEstadoVentanaCerrar">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Image Source="/App-Documentacion;component/Imagenes/cerrar.png" Width="10" Height="10" Opacity="0.7"/>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="Opacity" Value="0.7"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>



            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="true">

                    <Setter Property="Opacity" Value="1"/>

                </Trigger>



                <Trigger Property="IsMouseOver" Value="false">

                    <Setter Property="Opacity" Value=".4"/>

                </Trigger>

            </Style.Triggers>

        </Style>



        <Style TargetType="Button" x:Key="ButtonEstadoVentanaMaximizar">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Grid Width="20" Height="20" Background="Transparent">

                            <Rectangle HorizontalAlignment="Center" Height="10"  VerticalAlignment="Center" Width="15"

                                       Visibility="{Binding EstadoVentana,Mode=TwoWay,Converter={StaticResource ConvertWindowMaximizeToVisibility}}">

                                <Rectangle.Stroke>

                                    <RadialGradientBrush>

                                        <GradientStop Color="#FFB0ADAD" Offset="0"/>

                                        <GradientStop Color="#FF4F4949" Offset="1"/>

                                    </RadialGradientBrush>

                                </Rectangle.Stroke>

                            </Rectangle>



                            <Path Data="M18.281,4.77 L25.113001,4.77 25.113001,14.014 7.3319998,14.014 7.3319998,9.7440005 18.281,9.7440005 z M0.5,0.5 L18.281,0.5 18.281,4.77 7.3319998,4.77 7.3319998,9.7440005 0.5,9.7440005 z"

                                  HorizontalAlignment="Center" Height="10"  Stretch="Fill" VerticalAlignment="Center" Width="15" Visibility="{Binding EstadoVentana,Mode=TwoWay,Converter={StaticResource ConvertWindowNormalToVisibility}}">

                                <Path.Stroke>

                                    <RadialGradientBrush>

                                        <GradientStop Color="#FFB0ADAD" Offset="0"/>

                                        <GradientStop Color="#FF4F4949" Offset="1"/>

                                    </RadialGradientBrush>

                                </Path.Stroke>

                            </Path>

                        </Grid>



                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="Opacity" Value="0.7"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>



            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="true">

                    <Setter Property="Opacity" Value="1"/>

                </Trigger>



                <Trigger Property="IsMouseOver" Value="false">

                    <Setter Property="Opacity" Value=".4"/>

                </Trigger>

            </Style.Triggers>

        </Style>



        <Style TargetType="Button" x:Key="ButtonEstadoVentanaMinimizar">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Grid Width="20" Height="20" Background="Transparent">

                            <Path HorizontalAlignment="Center" Height="4"  VerticalAlignment="Center" Width="15" Data="M0.5,0.5 L35.353,0.5 L35.353,3.768 L0.5,3.768 z" Stretch="Fill">

                                <Path.Stroke>

                                    <RadialGradientBrush>

                                        <GradientStop Color="#FFB0ADAD" Offset="0"/>

                                        <GradientStop Color="#FF4F4949" Offset="1"/>

                                    </RadialGradientBrush>

                                </Path.Stroke>

                            </Path>

                        </Grid>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="Opacity" Value="0.7"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>



            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="true">

                    <Setter Property="Opacity" Value="1"/>

                </Trigger>



                <Trigger Property="IsMouseOver" Value="false">

                    <Setter Property="Opacity" Value=".4"/>

                </Trigger>

            </Style.Triggers>

        </Style>



        <Style TargetType="Button" x:Key="ButtonImage">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Image Source="{Binding Path=Tag,RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Width="40" Height="40"/>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>

            <Setter Property="Cursor" Value="Hand"/>



        </Style>

        <Style TargetType="Button" x:Key="ButtonImageMiniatura">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Image Source="{Binding Path=Tag,RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Width="15" Height="15"/>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>

            <Setter Property="Cursor" Value="Hand"/>



        </Style>



        <Style TargetType="Window" x:Key="StyleWindowHome">

            <Setter Property="WindowStyle" Value="None"/>

        </Style>



        <Style TargetType="TextBlock" x:Key="TextBlockGreen">

            <Setter Property="FontSize" Value="22"/>

            <Setter Property="Foreground" Value="{StaticResource VerdeBim}"/>

            <Setter Property="FontWeight" Value="Bold"/>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="HorizontalAlignment" Value="Center"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="Cursor" Value="Hand"/>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="true">

                    <Setter Property="Foreground" Value="{StaticResource BordeOpaco}"/>

                </Trigger>



                <Trigger Property="IsMouseOver" Value="false">

                    <Setter Property="Foreground" Value="{StaticResource VerdeBim}"/>

                </Trigger>

            </Style.Triggers>

        </Style>



        <Style TargetType="TextBlock" x:Key="TextBlockWhite">

            <Setter Property="FontSize" Value="14"/>

            <Setter Property="Foreground" Value="White"/>

            <Setter Property="FontWeight" Value="Bold"/>

            <Setter Property="Margin" Value="5"/>

            <Setter Property="HorizontalAlignment" Value="Left"/>

            <Setter Property="VerticalAlignment" Value="Center"/>

        </Style>



        <Style TargetType="Button" x:Key="ButtonGreenHeader">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <TextBlock Text="{Binding Tag,RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Style="{StaticResource TextBlockGreen}"/>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>



        <Style TargetType="Button" x:Key="ButtonAceptar">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border BorderThickness="2" BorderBrush="Black" Background="Green" Width="200" Height="40" Margin="5">

                            <TextBlock Text="ACEPTAR" Style="{StaticResource TextBlockWhite}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        </Border>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Cursor" Value="Hand"/>

        </Style>



        <Style TargetType="Button" x:Key="ButtonCancelar">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border BorderThickness="2" BorderBrush="Black" Background="Red" Width="200" Height="40" Margin="5">

                            <TextBlock Text="CANCELAR" Style="{StaticResource TextBlockWhite}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        </Border>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Setter Property="Cursor" Value="Hand"/>

        </Style>



        <Style TargetType="Button" x:Key="WorItem">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Grid Width="250" Margin="5">

                            <Grid.RowDefinitions>

                                <RowDefinition Height="30"/>

                                <RowDefinition Height="Auto"/>

                            </Grid.RowDefinitions>



                            <Grid Background="Green">

                                <TextBlock Text="{Binding Tag.Title,RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Style="{StaticResource TextBlockWhite}" />

                            </Grid>



                            <Border Grid.Row="1" BorderThickness="2" BorderBrush="{StaticResource BordeOpaco}">

                                <Grid Background="{StaticResource BordeOpaco}">

                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto"/>

                                        <ColumnDefinition Width="*"/>

                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>

                                        <RowDefinition Height="Auto"/>

                                        <RowDefinition Height="Auto"/>

                                        <RowDefinition Height="Auto"/>

                                    </Grid.RowDefinitions>



                                    <TextBlock Text="{Binding Tag.Tarea,RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Grid.Row="1"/>



                                    <Button Tag="{StaticResource Ir}" Content="Ir" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right"  Style="{StaticResource ButtonImage}"/>



                                </Grid>

                            </Border>







                        </Grid>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>



        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">

            <Grid>

                <Grid.ColumnDefinitions>

                    <ColumnDefinition />

                    <ColumnDefinition Width="20" />

                </Grid.ColumnDefinitions>

                <Border

                  x:Name="Border"

                  Grid.ColumnSpan="2"

                  CornerRadius="0"

                  Background="{StaticResource BordeOpaco}"

                  BorderBrush="#FF97A0A5"

                  BorderThickness="1" />

                <Border

                  Grid.Column="0"

                  CornerRadius="0"

                  Margin="1"

                  Background="{StaticResource BordeOpaco}"

                  BorderBrush="#FF97A0A5"

                  BorderThickness="0,0,1,0" />

                <Path

                  x:Name="Arrow"

                  Grid.Column="1"    

                  Fill="{StaticResource VerdeBim}"

                  HorizontalAlignment="Center"

                  VerticalAlignment="Center"

                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"

                />

            </Grid>



        </ControlTemplate>



        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">

            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />

        </ControlTemplate>



        <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">

            <Setter Property="SnapsToDevicePixels" Value="true"/>

            <Setter Property="OverridesDefaultStyle" Value="true"/>

            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>

            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>

            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>

            <Setter Property="MinWidth" Value="120"/>

            <Setter Property="MinHeight" Value="20"/>

            <Setter Property="Foreground" Value="{StaticResource VerdeBim}"/>

            <Setter Property="FontWeight" Value="Bold"/>

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ComboBox}">

                        <Grid>

                            <ToggleButton

                            Name="ToggleButton"

                            Template="{StaticResource ComboBoxToggleButton}"

                            Grid.Column="2"

                            Focusable="false"

                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"

                            ClickMode="Press">

                            </ToggleButton>

                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"

                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"

                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"

                            Margin="3,3,23,3"

                            VerticalAlignment="Center"

                            HorizontalAlignment="Left" />

                            <TextBox x:Name="PART_EditableTextBox"

                            Style="{x:Null}"

                            Template="{StaticResource ComboBoxTextBox}"

                            HorizontalAlignment="Left"

                            VerticalAlignment="Center"

                            Margin="3,3,23,3"

                            Focusable="True"

                            Background="{StaticResource BordeOpaco}"

                            Foreground="Green"

                            Visibility="Hidden"

                            IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <Popup

                            Name="Popup"

                            Placement="Bottom"

                            IsOpen="{TemplateBinding IsDropDownOpen}"

                            AllowsTransparency="True"

                            Focusable="False"

                            PopupAnimation="Slide">



                                <Grid Name="DropDown"

                              SnapsToDevicePixels="True"               

                              MinWidth="{TemplateBinding ActualWidth}"

                              MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                    <Border

                                x:Name="DropDownBorder"

                                Background="White"

 

                                BorderThickness="1"

                                BorderBrush="#888888"/>

                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">

                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />

                                    </ScrollViewer>

                                </Grid>

                            </Popup>

                        </Grid>

                        <ControlTemplate.Triggers>

                            <Trigger Property="HasItems" Value="false">

                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>

                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">

                                <Setter Property="Foreground" Value="#888888"/>

                            </Trigger>

                            <Trigger Property="IsGrouping" Value="true">

                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>

                            </Trigger>

                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">

                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>

                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>

                            </Trigger>

                            <Trigger Property="IsEditable"  Value="true">

                                <Setter Property="IsTabStop" Value="false"/>

                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>

                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

            <Style.Triggers>

            </Style.Triggers>

        </Style>



        <!-- SimpleStyles: ComboBoxItem -->

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">

            <Setter Property="SnapsToDevicePixels" Value="true"/>

            <Setter Property="Foreground" Value="Green"/>

            <Setter Property="OverridesDefaultStyle" Value="true"/>

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">

                        <Border Name="Border"

                              Padding="2"

                              SnapsToDevicePixels="true">

                            <ContentPresenter />

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsHighlighted" Value="true">

                                <Setter TargetName="Border" Property="Background" Value="{StaticResource BordeOpaco}"/>

                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">

                                <Setter Property="Foreground" Value="#888888"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>





        <!--Paginas-->

        <PagesCode:Code x:Key="PageCode"/>







    </Application.Resources>

</Application>